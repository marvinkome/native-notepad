// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders new note page correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#F8F8F8",
          "borderBottomColor": "#a7a6ab",
          "borderBottomWidth": 0.5,
          "elevation": 3,
          "flexDirection": "row",
          "height": 64,
          "justifyContent": "center",
          "left": 0,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 15,
          "right": 0,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
          "top": 0,
        }
      }
      virtual={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flex": 1,
          }
        }
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 17,
              "fontWeight": "600",
              "textAlign": "center",
            }
          }
          virtual={undefined}
        >
          Edit note
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        Object {
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 10,
        },
      ]
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": 1,
              "borderColor": "#D9D5DC",
              "borderLeftWidth": 0,
              "borderRightWidth": 0,
              "borderTopWidth": 0,
              "flexDirection": null,
              "height": 65,
              "marginLeft": 15,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "flex-start",
                "color": "#575757",
                "fontSize": 13,
                "left": null,
                "paddingLeft": null,
                "paddingRight": 5,
                "paddingTop": 5,
                "position": null,
                "right": null,
                "top": 5,
              }
            }
            virtual={undefined}
          >
            Note Title
          </Text>
          <TextInput
            allowFontScaling={true}
            editable={true}
            placeholderTextColor="#575757"
            style={
              Object {
                "alignSelf": "stretch",
                "color": "#000",
                "flex": 1,
                "fontSize": 15,
                "height": 50,
                "lineHeight": 18,
                "marginLeft": null,
                "paddingLeft": null,
                "paddingRight": 5,
                "top": 1.5,
                "width": null,
              }
            }
            underlineColorAndroid="rgba(0,0,0,0)"
            virtual={undefined}
          />
        </View>
        <TextInput
          allowFontScaling={true}
          multiline={true}
          placeholder="Note content"
          placeholderTextColor="#575757"
          rowSpan={5}
          style={
            Object {
              "borderBottomColor": "#D9D5DC",
              "borderBottomWidth": 1,
              "color": "#000",
              "fontSize": 15,
              "height": 125,
              "marginLeft": 13,
              "marginRight": 8,
              "marginTop": 15,
              "paddingLeft": 0,
              "paddingRight": 0,
              "textAlignVertical": "top",
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
        <View
          style={
            Object {
              "marginTop": 15,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                },
                Object {
                  "color": "#575757",
                  "fontSize": 15,
                  "paddingLeft": 8,
                },
              ]
            }
            uppercase={false}
            virtual={undefined}
          >
            Category:
          </Text>
          <View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": null,
                  "borderBottomWidth": null,
                  "borderColor": "#3F51B5",
                  "borderLeftWidth": null,
                  "borderRadius": 2,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 0,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingTop": 6,
                  "shadowColor": null,
                  "shadowOffset": null,
                  "shadowOpacity": null,
                  "shadowRadius": null,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                note={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#a7a7a7",
                      "fontFamily": "Roboto",
                      "fontSize": 16,
                      "lineHeight": null,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                    },
                    undefined,
                    undefined,
                  ]
                }
                uppercase={false}
                virtual={undefined}
              />
            </View>
            <Modal
              animationType="slide"
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={null}
              transparent={false}
              visible={false}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "height": 1334,
                  }
                }
                virtual={undefined}
              >
                <View>
                  <View
                    style={
                      Object {
                        "backgroundColor": "#3F51B5",
                        "borderBottomColor": "#3F51B5",
                        "borderBottomWidth": 0.5,
                        "elevation": 3,
                        "flexDirection": "row",
                        "height": NaN,
                        "justifyContent": "center",
                        "left": 0,
                        "paddingLeft": 10,
                        "paddingRight": 10,
                        "paddingTop": 15,
                        "right": 0,
                        "shadowColor": "#000",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.2,
                        "shadowRadius": 1.2,
                        "top": 0,
                      }
                    }
                    virtual={undefined}
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "alignSelf": "center",
                          "flex": 0.4,
                        }
                      }
                      virtual={undefined}
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        collapsable={undefined}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "alignSelf": null,
                            "backgroundColor": "transparent",
                            "borderBottomWidth": null,
                            "borderColor": null,
                            "borderLeftWidth": null,
                            "borderRadius": 2,
                            "borderRightWidth": null,
                            "borderTopWidth": null,
                            "elevation": 0,
                            "flexDirection": "row",
                            "height": 45,
                            "justifyContent": "space-between",
                            "marginLeft": 0,
                            "opacity": 1,
                            "paddingBottom": 6,
                            "paddingLeft": 10,
                            "paddingRight": 6,
                            "paddingTop": 6,
                            "shadowColor": null,
                            "shadowOffset": null,
                            "shadowOpacity": null,
                            "shadowRadius": null,
                          }
                        }
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <Text
                          accessible={true}
                          allowFontScaling={true}
                          ellipsizeMode="tail"
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#fff",
                              "fontFamily": "Roboto",
                              "fontSize": 17,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "paddingLeft": 5,
                              "paddingRight": 10,
                              "top": undefined,
                            }
                          }
                          uppercase={false}
                          virtual={undefined}
                        >
                          Back
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "alignSelf": "center",
                          "flex": 1,
                        }
                      }
                      virtual={undefined}
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "#FFF",
                            "fontFamily": "Roboto",
                            "fontSize": 19,
                            "fontWeight": "600",
                            "textAlign": "center",
                          }
                        }
                        virtual={undefined}
                      >
                        Select Category
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-end",
                          "alignSelf": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "flex-end",
                        }
                      }
                      virtual={undefined}
                    />
                  </View>
                </View>
                <RCTScrollView
                  data={
                    Array [
                      <Item
                        label="Personal"
                        value={0}
                      />,
                      <Item
                        label="School"
                        value={1}
                      />,
                      <Item
                        label="Work"
                        value={2}
                      />,
                    ]
                  }
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  invertStickyHeaders={undefined}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={null}
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          button={true}
                          onPress={[Function]}
                          selected={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "borderBottomColor": "#c9c9c9",
                              "borderBottomWidth": 0.5,
                              "flexDirection": "row",
                              "marginLeft": 18,
                              "paddingBottom": 15,
                              "paddingRight": 18,
                              "paddingTop": 15,
                            }
                          }
                          virtual={undefined}
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            ellipsizeMode="tail"
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "Roboto",
                                "fontSize": 16,
                              }
                            }
                            uppercase={false}
                            virtual={undefined}
                          >
                            Personal
                          </Text>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "flex": 0.28,
                                "paddingBottom": null,
                                "paddingLeft": null,
                                "paddingRight": null,
                                "paddingTop": null,
                              }
                            }
                            virtual={undefined}
                          >
                            <View
                              accessibilityComponentType={undefined}
                              accessibilityLabel={undefined}
                              accessibilityTraits={undefined}
                              accessible={true}
                              collapsable={undefined}
                              hasTVPreferredFocus={undefined}
                              hitSlop={undefined}
                              isTVSelectable={true}
                              nativeID={undefined}
                              onLayout={undefined}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignSelf": null,
                                  "opacity": 1,
                                }
                              }
                              testID={undefined}
                              tvParallaxProperties={undefined}
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={null}
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          button={true}
                          onPress={[Function]}
                          selected={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "borderBottomColor": "#c9c9c9",
                              "borderBottomWidth": 0.5,
                              "flexDirection": "row",
                              "marginLeft": 18,
                              "paddingBottom": 15,
                              "paddingRight": 18,
                              "paddingTop": 15,
                            }
                          }
                          virtual={undefined}
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            ellipsizeMode="tail"
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "Roboto",
                                "fontSize": 16,
                              }
                            }
                            uppercase={false}
                            virtual={undefined}
                          >
                            School
                          </Text>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "flex": 0.28,
                                "paddingBottom": null,
                                "paddingLeft": null,
                                "paddingRight": null,
                                "paddingTop": null,
                              }
                            }
                            virtual={undefined}
                          >
                            <View
                              accessibilityComponentType={undefined}
                              accessibilityLabel={undefined}
                              accessibilityTraits={undefined}
                              accessible={true}
                              collapsable={undefined}
                              hasTVPreferredFocus={undefined}
                              hitSlop={undefined}
                              isTVSelectable={true}
                              nativeID={undefined}
                              onLayout={undefined}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignSelf": null,
                                  "opacity": 1,
                                }
                              }
                              testID={undefined}
                              tvParallaxProperties={undefined}
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessibilityComponentType={undefined}
                        accessibilityLabel={undefined}
                        accessibilityTraits={undefined}
                        accessible={true}
                        hasTVPreferredFocus={undefined}
                        hitSlop={undefined}
                        isTVSelectable={true}
                        nativeID={undefined}
                        onLayout={undefined}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={null}
                        testID={undefined}
                        tvParallaxProperties={undefined}
                      >
                        <View
                          button={true}
                          onPress={[Function]}
                          selected={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "borderBottomColor": "#c9c9c9",
                              "borderBottomWidth": 0.5,
                              "flexDirection": "row",
                              "marginLeft": 18,
                              "paddingBottom": 15,
                              "paddingRight": 18,
                              "paddingTop": 15,
                            }
                          }
                          virtual={undefined}
                        >
                          <Text
                            accessible={true}
                            allowFontScaling={true}
                            ellipsizeMode="tail"
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "#000",
                                "fontFamily": "Roboto",
                                "fontSize": 16,
                              }
                            }
                            uppercase={false}
                            virtual={undefined}
                          >
                            Work
                          </Text>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "flex": 0.28,
                                "paddingBottom": null,
                                "paddingLeft": null,
                                "paddingRight": null,
                                "paddingTop": null,
                              }
                            }
                            virtual={undefined}
                          >
                            <View
                              accessibilityComponentType={undefined}
                              accessibilityLabel={undefined}
                              accessibilityTraits={undefined}
                              accessible={true}
                              collapsable={undefined}
                              hasTVPreferredFocus={undefined}
                              hitSlop={undefined}
                              isTVSelectable={true}
                              nativeID={undefined}
                              onLayout={undefined}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignSelf": null,
                                  "opacity": 1,
                                }
                              }
                              testID={undefined}
                              tvParallaxProperties={undefined}
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
